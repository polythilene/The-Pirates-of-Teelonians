///////////////////////////////////////////////////////////
//  CCaptainBakuba.as
//  Macromedia ActionScript Implementation of the Class CCaptainBakuba
//  Generated by Enterprise Architect
//  Created on:      14-Dec-2010 3:02:06 PM
//  Original author: poof!
///////////////////////////////////////////////////////////

package com.game
{
	import com.game.ai.AIState;
	import com.game.CPlayerTeelos;
	import flash.display.DisplayObjectContainer;
	import com.game.fx.CEffect_Summon;

	/**
	 * @author poof!
	 * @version 1.0
	 * @created 14-Dec-2010 3:02:06 PM
	 */
	public class CCaptainBakuba extends CPlayerCaptain implements IRangeAttacker
	{
		public var summonLane:int;
		public var abilityTargetLane:Array = [];
		public var nodeLane:Array = [];
		public var nodeX:Array = [];
		public var usedNode:Array = [];
		
		public var isSummonImmortal:Boolean;
		public var isSummonCannon:Boolean;
		public var isSummonInfantro:Boolean;
		public var isCloning:Boolean;
		
		
		public function CCaptainBakuba(){

		}
		
		override public function initialize():void 
		{
			super.initialize();
			
			m_baseAttack = 2;
			m_defense = 5;
			m_maxLife = 10;
			m_unitClass = UNITCLASS.ARCHER;
			m_counterClass = UNITCLASS.INFANTRY;
			m_counterBonus = 1;
			m_baseSpeed = 0.9;
			m_baseCooldownTime = 1800;
			m_trainCost = 180;
		}
		
		override public function onCreate(lane:int, targetPosX:int, container:DisplayObjectContainer):void 
		{
			super.onCreate(lane, targetPosX, container);
			m_attackRange = 700;
		}
		
		override protected function createSprite():void 
		{
			super.createSprite();
			m_sprite = new mcCaptain_Bakuba();
		}
		
		override public function update(elapsedTime:int):void 
		{
			super.update(elapsedTime);
			if ( isAnimationComplete() )
			{
				if (isSummonImmortal)
				{
					var summon:CTeeloBaseSummoned = CTeeloBaseSummoned(NPCManager.getInstance().add(CTeeloSummoned_Immortal, summonLane, 1000, State_GameLoop.getInstance().gameContainer));
					summon.x = m_sprite.x + 50;
					ParticleManager.getInstance().add(CEffect_Summon, summon.x, summon.y);
					summon.owner = this;
					//summon.setDestination(500);
					summon.destination = 450;
					isSummonImmortal = false;
					setCurrentFrame(1);
				}
				else if ( isSummonCannon )
				{
					for ( var i:int = 0; i < abilityTargetLane.length; i++)
					{
						var teelos:CPlayerTeelos;
						teelos = CPlayerTeelos(NPCManager.getInstance().add( CTeeloMediumCannon, nodeLane[i], nodeX[i] , State_GameLoop.getInstance().laneLayers[nodeLane[i]]));
						teelos.setDestination(nodeX[i]);
						teelos.placementNode = usedNode[i];
						isSummonCannon = false;
						setCurrentFrame(1);
					}
				}
				else if ( isSummonInfantro)
				{
					for ( i = 0; i < abilityTargetLane.length ; i++)
					{
						var infantro:CBaseTeelos;
						infantro = NPCManager.getInstance().add(CTeeloSummoned_Infantro, abilityTargetLane[i], -50,State_GameLoop.getInstance().laneLayers[abilityTargetLane[i]]);
						isSummonInfantro = false;
						setCurrentFrame(1);
					}
				}
				else if (isCloning)
				{
					for (i = 0 ; i < 5 ; i ++)
					{
						var cloneLane:int = i;
						if (cloneLane != laneIndex)
						{
							var captClone:CBaseTeelos = NPCManager.getInstance().add( CCaptainBakuba_Clone, cloneLane, 50, State_GameLoop.getInstance().laneLayers[i] );
							CBaseTeelos(captClone).Clone = true;
							//captClone.setCurrentFrame(7);
							setCurrentFrame(1);
							isCloning = false;
							//captClone.cloneLaneTarget = cloneLane;
						}
					}
				}
			}
		}
		
		override public function releaseProjectile():void
		{
			super.releaseProjectile();
			MissileManager.getInstance().launch( CMissileCrow_Bakuba, m_container, m_sprite.x, m_sprite.y - 45, 
												 m_sprite.scaleX, getFaction(), m_lane,
												 m_baseAttack, m_counterClass, m_counterBonus, m_level, m_detectInvisible, this );
		}
	}//end CCaptainBakuba

}